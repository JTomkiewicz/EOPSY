#!/usr/bin/bash

# default options
doRecursion=false
doLower=false
doUpper=false
doSedPattern=true

# get options from command line
while getopts rluh option
do 
    case "${option}"
        in
        r) 
            # recursion
            doRecursion=true
            ;;
        l) 
            # lowerizing
            doLower=true
            doSedPattern=false
            ;;
        u) 
            # uppercasing
            doUpper=true
            doSedPattern=false
            ;;
        h) 
            # help
            echo "Example usage:"
            echo "modify [OPTION] [SED PATTERN] <dir/file names...>"
            echo "Program modifies file names."
            echo 
            echo "Options:"
            echo "-r   use recursion"
            echo "-l   lowerizing file names"
            echo "-u   uppercasing file names"
            echo "-h   display help"
            # end program
            exit
            ;;
        ?) 
            # other
            echo "Unknown option. Use -h for help."
            # end program
            exit
            ;;
    esac
done

# remove all options that have been parsed by getopts (options with -)
shift "$((OPTIND-1))"

if [ $# = 0 ]; then
    echo "Missing parameters. Use -h for help."
    exit
fi

# see if parameters are correct
if $doUpper && $doLower; then
    echo "Incorrect options used. Use -h for help."
    exit
fi

# if sed pattern is needed, check if it exist
if $doSedPattern; then 
    if [ $# = 1 ]; then
        echo "Missing sed pattern. Use -h for help."
        exit
    fi 

    # we need to shift parameters and remember sed pattern as it will vanish 
    rememberSed="$1"
    shift
fi

# internal field separator (needed for find function)
IFS=$'\n'

# check if file exist
for args in "$@"
do 
    # -e NOT -f, as we are looking for name regardless of the type
    if [ ! -e "$args" ]; then
		echo "Missing file or folder $args. Check input or use -h for help."
		exit
	fi
done

# with recursion
if $doRecursion; then
    # with sed pattern
    if $doSedPattern; then
        for args in "$@"
        do
            # go throught files in directory, "" are protection for space in names
            for file in $(find "$args")
            do
                # get dir and name of file
                fileName="$(basename "$file")"
                dirName="$(dirname "$file")"

                # new name created with sed pattern
                newFileName=$(echo "$fileName" | sed "$rememberSed")

                # mv used to change names     
                mv $file $dirName/$newFileName 2>/dev/null # hide warnings that occurs while testing
            done
        done

        exit
    # without sed
    else
        for args in "$@"
        do
            # go throught files in directory
            for file in $(find "$args")
            do
                # get dir and name of file
                fileName="$(basename "$file")"
                dirName="$(dirname "$file")"

                # mv used to change names depend from mode
                if $doUpper; then
                    mv $file $dirName/${fileName^^}
                else 
                    mv $file $dirName/${fileName,,}
                fi
            done
        done
        
        exit
    fi
#without recursion
else
    # with sed pattern
    if $doSedPattern; then
        for args in "$@"
        do
            fileName="$(basename "$args")"
            dirName="$(dirname "$args")"

            # new name created with sed pattern
            newFileName=$(echo "$fileName" | sed "$rememberSed")

            # mv used to change names     
            mv $args $dirName/$newFileName
        done

        exit
    # without sed
    else
        for args in "$@"
        do
            fileName="$(basename "$args")"
            dirName="$(dirname "$args")"

            # mv used to change names depend from mode
            if $doUpper; then
                mv $args $dirName/${fileName^^}
            else 
                mv $args $dirName/${fileName,,}
            fi
        done

        exit
    fi
fi