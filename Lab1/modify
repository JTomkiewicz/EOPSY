#!/usr/local/bin/bash

# default options
doRecursion=false
doLower=false
doUpper=false
doSedPattern=true

# get options from command line
while getopts rluh option
do 
    case "${option}"
        in
        r) 
            # recursion
            doRecursion=true
            ;;
        l) 
            # lowerizing
            doLower=true
            doSedPattern=false
            ;;
        u) 
            #uppercasing
            doUpper=true
            doSedPattern=false
            ;;
        h) 
            #help
            echo "Example usage:"
            echo "modify [OPTION] [SED PATTERN] <dir/file names...>"
            echo "Program modifies file names."
            echo 
            echo "Options:"
            echo "-r   use recursion"
            echo "-l   lowerizing file names"
            echo "-u   uppercasing file names"
            echo "-h   display help"
            # end program
            exit
            ;;
        ?) 
            # other
            echo "Unknown option. Use -h for help."
            # end program
            exit
            ;;
    esac
done

# remove all options that have been parsed by getopts
shift "$((OPTIND-1))"

# see if parameters are correct
if $doUpper && $doLower; then
    echo "Incorrect options used. Use -h for help."
    exit
fi

# if sed pattern is needed, check if it exist
if $doSedPattern; then 
    if [ $# = 0 ]; then
        echo "Missing sed pattern. Use -h for help."
        exit
    fi 

    shift
fi

# internal field separator
IFS=$'\n'

# check if file exist
for args in "$@"
do 
    # -e NOT -f, as we are looking for name regardless of the type
    if [ ! -e "$args" ]; then
		echo "Missing file. Check input or use -h for help."
		exit
	fi
done

# with recursion
if $doRecursion; then
    # with sed pattern
    if $doSedPattern; then

        exit
    # without sed
    else

        exit
    fi
#without recursion
else
    # with sed pattern
    if $doSedPattern; then
        for args in "$@"
        do
            # get dir and name of file
            fileName="$(basename "$args")"
            dirName="$(dirname "$args")"

            # new name created with sed pattern
            newFileName=$(echo "$fileName" | sed "$1")

            # mv used to change names     
            mv $args $dirName/$newFileName
        done
        exit
    # without sed
    else
        for args in "$@"
        do
            # get dir and name of file
            fileName="$(basename "$args")"
            dirName="$(dirname "$args")"

            # mv used to change names
            if $doUpper; then
                mv $args $dirName/${fileName^^}
            else 
                mv $args $dirName/${fileName,,}
            fi
        done
        exit
    fi
fi